shaco=~/shaco CD=. filter="Makefile README.md *.lua *.py *.h *.c" {
 Makefile
 config_auth.lua
 config_base.lua
 config_benchmark.lua
 config_benchmarkdb.lua
 config_benchmarklog.lua
 config_bmdb.lua
 config_bug.lua
 config_center.lua
 config_echo.lua
 config_gamelog.lua
 config_gate.lua
 config_gate2.lua
 config_gateload.lua
 config_hall.lua
 config_keepalived.lua
 config_match.lua
 config_robot.lua
 config_robotcli.lua
 config_room.lua
 config_route.lua
 config_uniqueol.lua
 config_watchdog.lua
 config_watchdog2.lua
 libshaco=libshaco{
  sh_array.c
  sh_check.c
  sh_env.c
  sh_hash.c
  sh_init.c
  sh_log.c
  sh_module.c
  sh_net.c
  sh_node.c
  sh_reload.c
  sh_sig.c
  sh_start.c
  sh_timer.c
  sh_util.c
 }
 include=include{
  libshaco=libshaco{
   sh.h
   sh_array.h
   sh_env.h
   sh_hash.h
   sh_init.h
   sh_log.h
   sh_module.h
   sh_net.h
   sh_node.h
   sh_reload.h
   sh_timer.h
   sh_util.h
  }
 }
 base=base{
  args.h
  freeid.h
  hashid.h
  memrw.h
  stringtable.h
  args.c
 }
 net=net{
  net.h
  net_message.h
  netbuf.h
  netpoll.h
  socket.h
  socket_epoll.h
  socket_select.h
  net.c
  netbuf.c
 }
 redis=redis{
  redis.h
  redis_fmt.h
  redis_parser.h
  redis.c
  redis_fmt.c
  redis_parser.c
 }
 cnet=cnet{
  cnet.h
  cnet.c
 }
 mod=mod{
  cmdctl.h
  mod_auth.c
  mod_benchmark.c
  mod_benchmarkdb.c
  mod_benchmarklog.c
  mod_bug.c
  mod_centers.c
  mod_cmdctl.c
  mod_cmds.c
  mod_echo.c
  mod_gamelog.c
  mod_gate.c
  mod_hall.c
  mod_httpc.c
  mod_keepalivec.c
  mod_keepalived.c
  mod_loadbalance.c
  mod_log.c
  mod_match.c
  mod_node.c
  mod_rank.c
  mod_redisproxy.c
  mod_robot.c
  mod_robotcli.c
  mod_room.c
  mod_route.c
  mod_uniqueol.c
  mod_watchdog.c
 }
 mod_hall=mod_hall{
  hall.h
  hall_attribute.h
  hall_award.h
  hall_cmdctl.h
  hall_luck.h
  hall_play.h
  hall_player.h
  hall_playerdb.h
  hall_ring.h
  hall_role.h
  hall_tplt.h
  hall_washgold.h
  hall_attribute.c
  hall_award.c
  hall_play.c
  hall_player.c
  hall_playerdb.c
  hall_ring.c
  hall_role.c
  hall_tplt.c
  hall_washgold.c
 }
 mod_room=mod_room{
  room.h
  room_ai.h
  room_buff.h
  room_cmdctl.h
  room_dump.h
  room_fight.h
  room_game.h
  room_genmap.h
  room_item.h
  room_luck.h
  room_map.h
  room_tplt.h
  room.c
  room_ai.c
  room_dump.c
  room_fight.c
  room_game.c
  room_genmap.c
  room_item.c
  room_map.c
  room_tplt.c
 }
 mod_robot=mod_robot{
  robot.h
  robot_cmdctl.h
  robot_tplt.h
  robot_tplt.c
 }
 mod_match=mod_match{
  match.h
  match_cmdctl.h
 }
 mod_share=mod_share{
  luck_random.h
 }
 msg=msg{
  msg_char_attribute.lua
  msg.h
  msg_char_attribute.h
  msg_char_attribute_up.h
  msg_client.h
  msg_server.h
  msg_sharetype.h
 }
 tplt=tplt{
  tplt.h
  tplt_holder.h
  tplt_include.h
  tplt_internal.h
  tplt_visitor.h
  tplt_visitor_ops.h
  tplt_visitor_ops_implement.h
  tplt.c
  tplt_holder.c
  tplt_visitor.c
  tplt_visitor_ops_implement.c
 }
 elog=elog{
  elog.h
  elog_appender.h
  elog_appender_file.h
  elog_appender_rollfile.h
  elog_include.h
  elog_internal.h
  elog.c
  elog_appender_file.c
  elog_appender_rollfile.c
 }
 tool=tool{
  commandc.lua
  commandd.lua
  pathconfig.lua
  concat.py
  convert_excel.py
  service_tmp.c
  shaco-cli.c
  excelto=excelto{
   exconvertor.py
   exparser.py
   toc_opt.py
   tolua_opt.py
   tolualine_opt.py
   tomap_opt.py
   totbl_opt.py
   toxml_opt.py
  }
 }
 main=main{
  robot.c
  shaco.c
  test.c
 }
 web=web{
  rank.lua
 }
 http-parser=http-parser{
  http_parser.h
  http_parser.c
  parsertrace.c
  test.c
  url_parser.c
 }
 coroutine=coroutine {
  coroutine.h
  coroutine.c
 }
 datadefine=datadefine{
  tplt_struct.h
 }
}

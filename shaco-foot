#!/bin/bash

#SERVERS="gateload uniqueol match robot watchdog watchdog2 auth hall room gate gate2 route"
SERVERS="gateload uniqueol match robot watchdog auth hall room gate route"

error() {
    echo -ne "\033[40;31;1m"
    echo "$@"
    echo -ne "\033[0m"
}
info() {
    echo -ne "\033[40;32;1m"
    echo "$@"
    echo -ne "\033[0m"
}
count() {
    NSERVER=1
    for s in $SERVERS;do
        NSERVER=$(($NSERVER+1))
    done
}
ls() {
    ps -ef |grep shaco |grep config
    local n=`ps -ef |grep shaco |grep config |wc -l`
    if [ ${n} -eq $NSERVER ] 
    then
        info "node count [${n}] OK"
    else
        error "node count [${n} < ${NSERVER}] FAIL"
    fi
    ps -ef |grep commandd |grep lua
}
startone() {
    if [ $MEMCHECK -eq 0 ]
    then
        info "start ${1}"
        ./shaco config_${1}.lua --sh_daemon 1
    else
        info "start-memcheck ${1}"
        valgrind -v \
        --leak-check=full \
        --show-reachable=yes \
        --track-origins=yes \
        --suppressions=shaco.supp \
        --log-file=$HOME/log/${1}.vallog \
        ./shaco config_${1}.lua --sh_daemon 1
    fi
    sleep ${2}
}
stopone() {
    local list="ps -ef |grep shaco |grep config |grep config_${1}.lua"
    info -n "stop ${1}"
    
    local n=`eval "${list} |wc -l"`
    if [ ${n} -eq 0 ]
    then
        error " NONE"
        return
    fi

    local a=`eval "${list} | awk -F' ' '{print \\$2}'"`
    OLD_IFS="$IFS"
    IFS=$"\n"
    arr=($a)
    IFS="$OLD_IFS"
    for pid in ${arr[@]}
    do
        printf " $pid"
        while [ 1 ]
        do
            if [ -d /proc/$pid ]
            then
                kill -2 $pid
                sleep ${2}
            else
                break
            fi
        done
    done
    info " OK"
}
startcmdd() {
    cd tool && 2>&1 lua commandd.lua 0.0.0.0 7999 -d > ~/log/commandd.log
    ps -ef |grep commandd |grep lua
}
startall() {
    startone center 2
    for S in $SERVERS;do
        startone $S 0.5
    done
    sleep 1
    ls
}
start() {
    for S in $@;do
        startone $S 0.5
    done
    ls
}
stopall() {
    local col=9
    if [ $MEMCHECK -ne 0 ]
    then
        col=16
    fi
    local list="ps -ef |grep shaco |grep config |awk -F ' ' '{print \$$col}'"
    local a=`eval "${list}"`
    OLD_IFS="$IFS"
    IFS=$'\n'
    arr=($a)
    IFS="$OLD_IFS"
    for one in ${arr[@]}
    do
        one=${one#config_}
        one=${one%.lua}
        stopone $one 0.1
    done
}
stop() {
    for one in $@;do
        stopone $one 0.1
    done
}
stopcmdd() {
    pkill lua
}

USAGE="Usage: shaco-foot [startall] [start [svr .. ]] [stop] [ls] [startcmdd] [stopcmdd] -m"
MEMCHECK=0
CMD=$1
shift
while getopts ":m" optname
do
    case "$optname" in
    "m")
        MEMCHECK=1
        echo [memcheck mode]
        ;;
    *)
        #echo shout not be here
        ;;
    esac
done

count
case "$CMD" in
restartall)
    stopall
    startall
    ;;
restart)
    stop "$@"
    start "$@"
    ;;
startall)
    startall
    ;;
start)
    start "$@"
    ;;
stopall)
    stopall
    ;;
stop)
    stop "$@"
    ;;
startcmdd)
    startcmdd
    ;;
stopcmdd)
    stopcmdd
    ;;
ls)
    ls
    ;;
*)
    echo $USAGE
    ;;
esac
